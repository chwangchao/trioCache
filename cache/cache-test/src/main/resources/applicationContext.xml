<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">


	<context:component-scan base-package="com.zh.cn.trio">
	</context:component-scan>

	<!-- 缓存策略 如果只有一个可以不写名字 如果有多个在注解或者配置中cacheStrategy的值填写该对象的getName()方法的返回值 -->
	<bean class="com.zh.cn.trio.cache.redis.strategy.redisStrategy"></bean>

	<!-- 开启注册缓存配置 -->
	 <bean class="com.zh.cn.trio.cache.aop.TrioCacheAnnotationAspect"></bean> 

	<!-- 自动代理 和注解缓存一起使用 -->
	<aop:aspectj-autoproxy proxy-target-class="true">
	</aop:aspectj-autoproxy>

	<bean id="xmlBean" class="com.zh.cn.trio.cache.bean.TrioCacheBean">
		<property name="cacheTime" value="1000">
		</property>
	</bean>

	<bean id="xmlCache" class="com.zh.cn.trio.cache.aop.TrioCacheXmlAspect">
		<property name="trioCacheBean" ref="xmlBean">
		</property>
	</bean>

	<aop:config>
		<aop:aspect ref="xmlCache">
			<aop:pointcut expression="execution(* test.path.business.*.*_xml(..))"
				id="auto" />
			<aop:around method="proxy" pointcut-ref="auto" />
		</aop:aspect>
	</aop:config>


	<!-- =============================以下为测试工程配置========================================== -->

	<context:property-placeholder location="classpath*:*.properties" />

	<!-- redis的操作实现类 自己的工程做自己的适配 -->
	<bean class="test.path.redis.RedisStringOperationImpl">
		<property name="jedisPool" ref="jedisPool"></property>
	</bean>

	<!-- 测试接口 -->
	<bean class="test.path.business.FaceImpl"></bean>

	<!-- 测试配置的redis环境 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg type="java.net.URI">
			<value>${config.redis.single}</value>
		</constructor-arg>
	</bean>

</beans>
